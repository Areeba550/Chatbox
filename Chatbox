import requests
from nltk.chat.util import Chat, reflections
from flask import Flask, render_template, request, jsonify
import webbrowser
import threading

app = Flask(__name__)

API_KEY = "f3QVs3jsMXhlYz9dwoU+PQ==VktcTcDd3faM44uC"

# Function to get a random fact from API Ninja


def get_random_fact():
    url = "https://api.api-ninjas.com/v1/facts"
    headers = {'X-Api-Key': API_KEY}
    try:
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            data = response.json()
            if data:
                return data[0]['fact']
            else:
                return "Sorry, I couldn't find a fact at the moment."
        else:
            return f"Error fetching the fact: {response.status_code}. Please try again later."
    except Exception as e:
        return f"An error occurred: {str(e)}"

# Define chatbot responses with more flexible patterns
pairs = [
    ["hi|hello|hey", ["Hi there! I'm your friendly chatbot! I can provide random facts and answer general queries. How can I help you today?"]],
    ["what do you do|what can you do|what are you|who are you", ["I am a chatbot that can give you interesting random facts and have general conversations with you. Try asking me for a random fact!"]],
    [r"(tell|give|provide|show).*(me|any|a|some|one)?.*(fact|random fact)", ["Sure! Here's a random fact for you: %s" % get_random_fact()]],
    ["what is your name?", ["My name is ChatBot, nice to meet you!"]],
    ["how are you?", ["I'm doing great, thank you for asking! How about you?"]],
    ["quit", ["Goodbye! It was nice talking to you. Have a great day!"]],
]

# Create the chatbot
chatbot = Chat(pairs, reflections)

# Flask route to render the main page
@app.route("/")
def home():
    return render_template("index.html")

# Flask route to handle the conversation
@app.route("/get", methods=["POST"])
def get_response():
    user_input = request.form['msg']
    response = chatbot.respond(user_input)
    if response:
        return jsonify({"reply": response})
    else:
        return jsonify({"reply": "I'm not sure about that. Can you ask something else?"})

# Function to open the browser
def open_browser():
    webbrowser.open_new("http://127.0.0.1:5000/")

# Function to run the Flask server
def run_flask():
    app.run(debug=True, use_reloader=False)

if __name__ == "__main__":
    # Open the browser in a separate thread
    threading.Timer(1, open_browser).start()
    run_flask()
